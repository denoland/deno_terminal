name: ci

on: [push, pull_request]

jobs:
  rust:
    name: deno_terminal-${{ matrix.os}}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-2019]

    env:
      CARGO_INCREMENTAL: 0
      GH_ACTIONS: 1
      RUST_BACKTRACE: full
      RUSTFLAGS: -D warnings

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install rust
        uses: dsherret/rust-toolchain-file@v1

      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install Deno
        uses: denoland/setup-deno@v1

      - name: Format
        if: contains(matrix.os, 'ubuntu')
        run: |
          cargo fmt -- --check
          deno fmt --check

      - name: Lint
        if: contains(matrix.os, 'ubuntu')
        run: cargo clippy --all-features --all-targets -- -D clippy::all

      - name: Cargo Build
        run: cargo build --all-features --all-targets

      - name: Cargo Test
        run: cargo test --all-features --all-targets

      - name: Cargo publish
        if: |
          github.repository == 'denoland/deno_terminal' &&
          startsWith(github.ref, 'refs/tags/') && 
          contains(matrix.os, 'ubuntu')
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish
